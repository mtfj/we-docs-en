
.. _operations-node:

Подключение участников к сети
======================================

Момент :ref:`запуска <node-start>` первой ноды можно считать началом создания новой блокчейн-сети. Разворачивать блокчейн-сеть вы можете со старта всего одной ноды, добавляя новые ноды по мере необходимости.

* :ref:`Подключите <connect-existing-net>` новую ноду к уже существующей сети.
* :ref:`Удалите <delete-node>` лишние ноды из сети.

.. _connect-existing-net:

Подключение новой ноды к существующей сети
-----------------------------------------------

Новые ноды можно добавлять в сеть в любой момент времени. Настройка конфигурационных файлов новой ноды описана 
в подразделе :ref:`Конфигурация ноды <configuration>`. Выполните все указанные в приведённом подразделе действия и :ref:`запустите <node-start>` ноду. Далее выполняются следующие действия:

1. Пользователь новой ноды передаёт публичный ключ и описание ноды администратору сети.
2. Администратор сети (нода с ролью "Connection-manager") использует полученные публичный ключ и описание ноды при создании транзакции :ref:`111 RegisterNode <RegisterNodeTransaction>` с параметром ``"opType": "add"``.
3. Транзакция попадает в блок и далее в стейты нод участников сети. Вследствие транзакции среди сохраняемых данных каждый участник сети хранит обязательно публичный ключ и адрес новой ноды.
4. При необходимости администратор сети может добавить новой ноде дополнительные роли при помощи транзакции :ref:`102 Permit <PermitTransaction>`.
5. Пользователь :ref:`запускает <node-start>` ноду.
6. После запуска нода отправляет :ref:`handshake-сообщение <network-message-auth-handshake>` со своим публичным ключом участникам из списка "peers" своего конфигурационного файла.
7. Участники сети сравнивают публичный ключ из :ref:`handshake-сообщения <network-message-auth-handshake>` и ключ из транзакции :ref:`111 RegisterNode <RegisterNodeTransaction>`, отправленной администратором сети. Если проверка успешна, участник сети обновляет свою БД и рассылает в сеть сообщение :ref:`Peers Message <network-message-PeersMessage>`.
8. Успешно подключившись, новая нода выполняет синхронизацию с сетью и получает таблицу адресов участников сети.

.. _delete-node:

Удаление ноды
--------------------

1. Администратор сети создает транзакцию :ref:`111 RegisterNode <RegisterNodeTransaction>` с параметром ``"opType": "remove"`` для удаления ноды из сети, в которую помещается её публичный ключ.
2. Транзакция с удалением ноды вместе с остальными попадает в блок, и её принимают другие ноды.
3. После принятия транзакции ноды находят в своем стейте публичный ключ, указанный в транзакции :ref:`111 RegisterNode <RegisterNodeTransaction>`, и удаляют его из стейта.
4. Далее ноды удаляют сетевой адрес ноды с ключом, указанным в транзакции :ref:`111 RegisterNode <RegisterNodeTransaction>`, из списка ``network.known-peers`` конфигурационного файла ноды.







