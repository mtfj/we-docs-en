
.. _operations-node:

Основные операции в сети
======================================

Момент :ref:`запуска <node-start>` первой ноды можно считать началом создания новой блокчейн-сети. Разворачивать блокчейн-сеть вы можете со старта всего одной ноды, добавляя новые ноды по мере необходимости.

Далее вы можете выполнить следующие операции:

* :ref:`Подключите <connect-existing-net>` новую ноду к уже существующей сети.
* :ref:`Удалите <delete-node>` лишние ноды из сети.
* :ref:`Добавьте <add-privacy-policy>` или :ref:`измените <update-privacy-policy>` группу доступа к конфиденциальным данным.
* :ref:`Обменяйтесь <data-privacy-exchange>` конфиденциальными данными.

.. _connect-existing-net:

Подключение новой ноды к существующей сети
-----------------------------------------------

Новые ноды можно добавлять в сеть в любой момент времени. Настройка конфигурационных файлов новой ноды описана 
в подразделе :ref:`Конфигурация ноды <configuration>`. Выполните все указанные в приведённом подразделе действия и :ref:`запустите <node-start>` ноду. Далее выполняются следующие действия:

1. Пользователь новой ноды передаёт публичный ключ и описание ноды администратору сети.
2. Администратор сети (нода с ролью "Connection-manager") использует полученные публичный ключ и описание ноды при создании транзакции :ref:`111 RegisterNode <RegisterNodeTransaction>` с параметром ``"opType": "add"``.
3. Транзакция попадает в блок и далее в стейты нод участников сети. Вследствие транзакции среди сохраняемых данных каждый участник сети хранит обязательно публичный ключ и адрес новой ноды.
4. При необходимости администратор сети может добавить новой ноде дополнительные роли при помощи транзакции :ref:`102 Permit <PermitTransaction>`.
5. Пользователь :ref:`запускает <node-start>` ноду.
6. После запуска нода отправляет :ref:`handshake-сообщение <network-message-auth-handshake>` со своим публичным ключом участникам из списка "peers" своего конфигурационного файла.
7. Участники сети сравнивают публичный ключ из :ref:`handshake-сообщения <network-message-auth-handshake>` и ключ из транзакции :ref:`111 RegisterNode <RegisterNodeTransaction>`, отправленной администратором сети. Если проверка успешна, участник сети обновляет свою БД и рассылает в сеть сообщение :ref:`Peers Message <network-message-PeersMessage>`.
8. Успешно подключившись, новая нода выполняет синхронизацию с сетью и получает таблицу адресов участников сети.

.. _delete-node:

Удаление ноды
--------------------

1. Администратор сети создает транзакцию :ref:`111 RegisterNode <RegisterNodeTransaction>` с параметром ``"opType": "remove"`` для удаления ноды из сети, в которую помещается её публичный ключ.
2. Транзакция с удалением ноды вместе с остальными попадает в блок, и её принимают другие ноды.
3. После принятия транзакции ноды находят в своем стейте публичный ключ, указанный в транзакции :ref:`111 RegisterNode <RegisterNodeTransaction>`, и удаляют его из стейта.
4. Далее ноды удаляют сетевой адрес ноды с ключом, указанным в транзакции :ref:`111 RegisterNode <RegisterNodeTransaction>`, из списка ``network.known-peers`` конфигурационного файла ноды.

.. _add-privacy-policy:

Создание группы доступа к конфиденциальным данным
-----------------------------------------------------------

Группу доступа к конфиденциальным данным может создать любой участник сети. Перед созданием группы необходимо определиться с кругом участников сети, которые будут получать конфиденциальные данные. Далее любой из участников выполняет следующие действия:

1. Участник сети, который будет владельцем группы доступа, создаёт транзакцию :ref:`112 CreatePolicy <CreatePolicyTransaction>` со следующими основными параметрами:

  * sender - публичный ключ создателя группы доступа.
  * description - описание группы доступа.
  * policyName - имя группы доступа.
  * recipients - публичные ключи участников группы доступа, которые будут иметь право получать конфиденциальные данные.
  * owners - публичные ключи владельцев группы доступа, которые, помимо доступа к данным, смогут изменять состав участников группы.

2. Транзакция с созданием группы доступа вместе с остальными попадает в блок, и её принимают другие ноды.
3. После принятия транзакции доступ к отправляемым в сеть конфиденциальным данным получают все участники, зарегистрированные в созданной группе доступа.

.. _update-privacy-policy:

Изменение группы доступа
---------------------------------

Изменять группы доступа могут только их владельцы. Выполняются следующие действия для изменения списка участников в группе доступа:

1. Владелец группы доступа создаёт транзакцию :ref:`113 UpdatePolicy <UpdatePolicyTransaction>` со следующими основными параметрами:

  * policyId - идентификатор группы доступа.
  * sender - публичный ключ владельца группы доступа.
  * opType - опция добавления (``add``) или удаления (``remove``) участников группы.
  * recipients - публичные ключи участников группы доступа, которые добавляются или удаляются из группы доступа.
  * owners - публичные ключи владельцев группы доступа, которые добавляются или удаляются из группы доступа.
2. Транзакция с изменением группы доступа вместе с остальными попадает в блок, и её принимают другие ноды.
3. После принятия транзакции в сети обновляется информация об участниках изменённой группы.






