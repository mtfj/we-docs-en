
.. _config-description:

Описание параметров конфигурационного файла ноды
====================================================

Конфигурационный файл ноды содержит основные настройки для работы блокчейна Vostok. В состав файла входят следующие секции:

* :ref:`vostok <vostok-sect-conf>` - общая секция, куда входят все секции настройки блокчейна.
* :ref:`blockchain <blockchain-sect-conf>` - настройка основных параметров блокчейна.
* :ref:`network <network-sect-conf>` - сетевые настройки.
* :ref:`wallet <wallet-sect-conf>` - настройка доступа к закрытым ключам ноды.
* :ref:`miner <miner-sect-conf>` - настройка майнинга.
* :ref:`rest-api <restapi-sect-conf>` - настройка REST API.
* :ref:`synchronization <synchronization-sect-conf>` - настройка синхронизации ноды с блокчейном.
* :ref:`utx <utx-sect-conf>` - настройка хранилища неавторизованных транзакций.
* :ref:`features <features-sect-conf>` - настройка дополнительных параметров ноды.
* :ref:`transaction-rebroadcaster <transrebroad-sect-conf>` - настройка повторной отправки транзакций в блокчейн.
* :ref:`docker-engine <docker-sect-conf>` - настройка Docker смарт-контрактов.
* :ref:`privacy <privacy-sect-conf>` - настройка групп доступа к конфиденциальной информации.

Для параметров в конфигурационном файле применяется несколько типов значений.

* Числовое значение, используемое для указания точного количества элементов. Это может быть количество транзакций, блоков, соединений.
* Числовое значение с указанием единиц измерения, используемое для определения временного периода или объёма памяти. В таком виде, как правило, указываются временные периоды в днях, часах или секундах, или объём кэш-памяти, например, ``leveldb-cache-size = 256M`` или ``connection-timeout = 30s``.
* Строковое значение, используемое для указания адресов, путей к директориям, паролям и т.д. Путь к директории указывается в формате, приемлемом для текущей ОС. Значение указывается в кавычках.
* Массив, используемый для указания списков значений, например, адресов или публичных ключей. Значение указывается в квадратных скобках через запятую.
* Логический тип ``no`` или ``yes``, используемый для активации различных опций.

.. _vostok-sect-conf:

Секция ``vostok``
---------------------

Секция ``vostok`` включает все остальные секции настроек блокчейна, а также следующие отдельные параметры:

* ``waves-crypto`` - тип :ref:`шифрования <cryptography>` в блокчейне. Возможные значения: ``yes`` - выбор криптографии Waves, ``no`` - выбор ГОСТ-криптографии.
* ``directory`` - основная директория для хранения ПО ноды.
* ``data-directory`` - директория для хранения данных блокчейна в LevelDB: блоки, транзакции, стейт ноды.
* ``leveldb-cache-size`` - ограничение размера кэш-памяти, используемой для валидации блоков. Низкое значение уменьшает загрузку памяти, более высокое значение вместе с потреблением памяти увеличивает производительность ноды. Значение ``0`` отключает кэширование.
* ``max-cache-size`` - максимальный объём кэш-памяти. 
* ``max-rollback-depth`` - количество блоков, на которые можно откатить ноду назад.
* ``remember-blocks-interval-in-cache`` - период хранения блоков в кэш-памяти.
* ``ntp-server`` - адрес NTP-сервера.
* ``logging-level`` - уровень логирования работы ноды. Возможные значения: ``DEBUG``, ``INFO``, ``WARN``, ``ERROR``, по умолчанию установлено значение ``INFO``.
* ``owner-address`` - адрес ноды, которая будет владельцем конфигурационного файла.
* ``scheduler-service.enable`` - активация :ref:`анкоринга <anchoring>`.

.. _blockchain-sect-conf:

Секция ``blockchain``
-----------------------

Секция отвечает за основные параметры блокчейна и включает в себя следующие параметры:

* ``type`` - тип блокчейна. Возможные значения ``DEFAULT`` или ``CUSTOM``.
* ``consensus.type`` - тип :ref:`консенсуса <consensus>` в блокчейне. Возможные значения ``PoS`` или ``PoA``. Если хотите дополнительно настроить алгоритм консенсуса, закомментируйте или удалите данный параметр и используйте дополнительную секцию ``consensus``.
* ``fee`` - список :ref:`комиссий <transaction-structure>` за тразакции в блокчейне.

При выборе типа блокчейна ``CUSTOM`` появляется дополнительная возможность кастомизации конфигурационного файла.

* ``address-scheme-character`` - байт сети, для "Vostok Mainnet" - ``V``, для "Vostok Partnernet" - ``P``. Данный параметр используется для предотвращения конфликта адресов из разных сетей.
* ``consensus`` - блок дополнительных настроек консенсуса.
* ``functionality`` - блок настройки основных параметров блокчейна.
* ``genesis`` - блок настройки параметров генезис-блока.

**Блок** ``consensus``

* ``type`` - тип консенсуса.
* ``sync-duration``
* ``round-duration``
* ``ban-duration-blocks``
* ``warnings-for-ban``
* ``max-bans-percentage``

**Блок** ``functionality``

* ``feature-check-blocks-period`` - количество блоков, через которые выполняется проверка и активация опций блокчейна.
* ``blocks-for-feature-activation`` - количество блоков, через которые применяется активированная опция.
* ``pre-activated-features`` - 
* ``double-features-periods-after-height`` - 

**Блок** ``genesis``

* ``average-block-delay`` - средняя задержка создания блоков.
* ``initial-base-target`` - 
* ``timestamp`` - числовой код даты и времени. Время указывается в миллисекундах, значение должно состоять из 13 цифр. Если вы берёте стандартное значение ``timpstamp``, состоящее из 10 цифр, то в конце необходимо добавить три любые цифры.
* ``block-timestamp`` - числовой код даты и времени. Время указывается в миллисекундах, значение должно состоять из 13 цифр. Если вы берёте стандартное значение ``timpstamp``, состоящее из 10 цифр, то в конце необходимо добавить три любые цифры.
* ``initial-balance`` - начальный баланс сети.
* ``genesis-public-key-base-58`` - хеш публичного ключа генезис-блока, зашифрованный в Base58.
* ``signature`` - подпись генезис-блока, зашифрованная в Base58.
* ``transactions`` - список участников сети с первоначальным балансом, создание которых войдёт в генезис-блок в виде генезис-транзакций.
* ``network-participants`` - список сетевых участников с ролями, создание которых войдёт в генезис-блок в виде генезис-транзакций.

.. _network-sect-conf:

Секция ``network``
-------------------------

Секция содержит сетевые настройки и включает в себя следующие параметры:

* ``file`` - путь к файлу с адресами известных участников сети и участников, доступ в сеть которым запрещён (blacklist).
* ``bind-address`` - сетевой адрес ноды.
* ``port`` - номер порта.
* ``node-name`` - имя ноды для отправки во время процедуры handshake.
* ``nonce`` - 
* ``known-peers`` - список известных сетевых адресов нод.
* ``declared-address`` - сетевой адрес ноды вместе с номером порта для процедуры handshake.
* ``peers-data-residence-time`` - период хранения информации о пирах в БД с момента последнего контакта с ними.
* ``black-list-residence-time`` - период бана пира, на который он должен оставаться в чёрном списке после бана.
* ``break-idle-connections-timeout`` - период, за который при отсутствии сообщений от пира прерывается соединение с ним.
* ``max-inbound-connections`` - максимальное количество соединений с внутренними сетями.
* ``max-outbound-connections`` - максимальное количество соединений с внешними сетями.
* ``max-single-host-connections`` - максимальное количество соединений с отдельными хостами.
* ``tx-buffer-size`` - максимальный размер буфера для транзакций.
* ``connection-timeout`` - таймаут соединения с другими пирами.
* ``max-unverified-peers`` - максимальное количество непроверенных пиров.
* ``enable-peers-exchange`` - активация опции обмена информацией об известных пирах.
* ``enable-blacklisting`` - активация возможности бана пиров и создания чёрного списка.
* ``peers-broadcast-interval`` - интервал отправки в сеть списка известных пиров.
* ``handshake-timeout`` - таймаут для процедуры handshake.
* ``suspension-residence-time`` - 
* ``received-txs-cache-timeout`` - таймаут, за который удаляются из кэш-памяти транзакции с истёкшим сроком. 

**Блок** ``upnp``

Блок для настройки UPnP, используемой для работы блокчейна в домашней сети с применением роутеров или маршрутизаторов. Если ваш блокчейн работает в облаке, данную настройку рекомендуется не применять и установить значение ``enable = no``.

* ``enable`` - активация использования UPnP.
* ``gateway-timeout`` - таймаут соединения со шлюзом.
* ``discover-timeout`` - таймаут обнаружения.

**Блок** ``traffic-logger``

Блок логирования входящих и исходящих сообщений.

* ``ignore-tx-messages`` - список кодов игнорируемых отправляемых сообщений.
* ``ignore-rx-messages`` - список кодов игнорируемых получаемых сообщений.

.. _wallet-sect-conf:

Секция ``wallet``
---------------------

* ``file`` - директория для хранения приватных ключей.
* ``password`` - пароль для доступа к файлу с приватными ключами.
* ``seed`` - секретная фраза для восстановления доступа к аккаунту, закодированная в Base58.

.. _miner-sect-conf:

Секция ``miner``
-----------------------

* ``enable`` - активация опции майнинга.
* ``quorum`` - необходимое количество соединений для создания блока. Значение ``0`` позволит генерировать блоки оффлайн.
* ``interval-after-last-block-then-generation-is-allowed`` - создание блока только в том случае, если последний блок не старше указанного периода времени.
* ``no-quorum-mining-delay`` - задержка майнинга при отсутствии кворума.
* ``micro-block-interval`` - интервал между микроблоками.
* ``max-transactions-in-key-block`` - максимальное количество транзакций в ключевом блоке.
* ``max-transactions-in-micro-block`` - максимальное количество транзакций в микроблоке.
* ``min-micro-block-age`` - минимальный возраст микроблока.
* ``retry-for-contract-execution-complete-interval`` - интервал, за который майнер проверяет исполненные Docker-контракты для создания микроблоков.

.. _restapi-sect-conf:

Секция ``rest-api``
-----------------------

* ``enable`` - активация опции REST API на ноде.
* ``bind-address`` - сетевой адрес ноды для привязки REST API.
* ``port`` - порт прослушивания REST API запросов.
* ``api-key-hash``- хеш от ключевой строки доступа к REST API.
* ``privacy-api-key-hash`` - хеш от ключевой строки доступа к методам ``privacy``.
* ``cors`` - поддержка кросс-доменных запросов к REST API.
* ``api-key-different-host`` - активация поддержки REST API ключа от других хостов.
* ``transactions-by-address-limit`` - максимальное количество транзакций, возвращаемых методом ``/transactions/address/{address}/limit/{limit}``.
* ``distribution-address-limit`` 

.. _synchronization-sect-conf:

Секция ``synchronization``
-------------------------------

* ``max-rollback`` - максимальное количество блоков, на которые можно откатить ноду при форке. Если при форке разница высот нод больше указанного значения, откат невозможен.
* ``max-chain-length`` -
* ``synchronization-timeout`` - период синхронизации для получения всех запрашиваемых блоков.
* ``score-ttl`` - 

**Блок** ``invalid-blocks-storage``

Блок для настройки невалидных блоков в кэш-памяти.

* ``max-size`` - максимальное количество элементов в кэш-памяти.
* ``timeout`` - период хранения невалидных блоков и их владельцев в чёрном списке.
 
 **Блок** ``history-replier``

 Блок настроек репликации истории кэш-памяти.

* ``max-micro-block-cache-size`` - максимальное количество микроблоков для кэширования.
* ``max-block-cache-size``- максимальное количество блоков для кэширования.
 
**Блок** ``utx-synchronizer``

Блок настроек синхронизации неподтверждённых транзакций.

* ``network-tx-cache-size`` - максимальный объём кэш-памяти для неподтверждённых транзакций.
* ``network-tx-cache-time`` - максимальное время кэширования для неподтверждённых транзакций.
* ``max-buffer-size`` - максимальное количество транзакций в буфере. При достижении лимита буфера нода обработает все транзакции в пакетном режиме.
* ``max-buffer-time`` - максимальное время хранения транзакций в буфере. При достижении лимита времени нода обработает все транзакции в пакетном режиме.

**Блок** ``micro-block-synchronizer``

* ``wait-response-timeout`` - максимальное время ожидания до нового запроса на создание следующего микроблока.
* ``processed-micro-blocks-cache-timeout`` - время хранения подписей обработанных микроблоков.
* ``inv-cache-timeout`` - время хранения микроблоков с информацией об их нодах для предотвращения повторной обработки.

.. _utx-sect-conf:

Секция ``utx``
-----------------

* ``max-size`` - количество хранимых неподтверждённых транзакций.
* ``memory-limit`` - лимит памяти, по умолчанию 1 Гб.
* ``cleanup-interval`` - интервал запуска очистки пула неподтверждённых транзакций.
* ``blacklist-sender-addresses`` - список адресов, попавших в чёрный список.
* ``allow-blacklisted-transfer-to`` - список адресов, к которым могут приходить транзакции от адресов из чёрного списка.
* ``allow-transactions-from-smart-accounts`` - список адресов, к которым могут приходить транзакции от смарт-аккаунтов.

.. _features-sect-conf:

Секция ``features``
----------------------

* ``auto-shutdown-on-unsupported-feature``
* ``supported``

.. _transrebroad-sect-conf:

Секция ``transaction-rebroadcaster``
--------------------------------------
    
* ``enable`` 
* ``delay``
* ``types``

.. _docker-sect-conf:

Секция ``docker-engine``
---------------------

* ``enable`` - активация опции создания Docker смарт-контрактов.
* ``docker-host`` - имя хоста.
* ``node-rest-api`` - адрес доступа к REST API ноды, если используется хост для Docker.
* ``integration-tests-mode-enable`` - активация опции запуска тестов интеграции.
* ``reuse-containers`` - активация повторного использования docker-контейнеров для выполнения последующих смарт-контрактов.
* ``remove-container-after`` - период времени, после которого происходит автоматическое удаление контейнера.
* ``allow-net-access`` - активация доступа в сеть для смарт-контрактов.
* ``remote-registries`` - список удалённых registry репозиториев для запуска Docker-контрактов.
* ``check-registry-auth-on-startup`` - проверка авторизации на registry репозиториях при старте ноды.

**Блок** ``docker-auth``

Блок для указания параметров авторизации для Docker хоста.

* ``username`` - логин.
* ``password`` - пароль.

**Блок** ``execution-limits``

Блок настройки выполнения Docker контрактов.

* ``timeout`` - таймаут для исполнения смарт-контракта.
* ``memory`` - лимит памяти в мегабайтах для смарт-контракта.
* ``memory-swap`` - размер файла подкачки в мегабайтах для смарт-контракта.

**Блок** ``contract-execution-messages-cache``

Блок настройки кэширования сообщений исполняемых контрактов.

* ``expire-after`` - время жизни сообщений в кэш-памяти.
* ``max-buffer-size`` - максимальное количество сообщений буфере. При достижении лимита буфера нода обработает все сообщения в пакетном режиме.
* ``max-buffer-time`` - максимальное время хранения сообщений в буфере. При достижении лимита буфера нода обработает все сооющения в пакетном режиме.

.. _privacy-sect-conf:

Секция ``privacy``
--------------------

Секция содержит блок ``storage``, в котором настраивается БД для хранения конфиденциальных данных.

**Блок** ``storage``

* ``enabled`` = false
* ``url`` - адрес БД PostgreSQL.
* ``driver`` - имя драйвера JDBC.
* ``profile`` - имя профиля для доступа к JDBC.
* ``user`` - имя пользователя для доступа к БД.
* ``password`` - пароль для доступа к БД.
* ``connectionPool`` - имя пула соединений. По умолчанию ``HikariCP``.
* ``connectionTimeout`` - таймаут для соединения.
* ``connectionTestQuery`` - имя тестового запроса.
* ``queueSize`` - размер очереди запросов.
* ``numThreads`` - количество одновременных подключений
* ``schema`` - схема взаимодействия.
* ``migration-dir`` - директория для миграции данных.













